name: CI/CD Pipeline (main only)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      IMAGE_NAME: zerojae175/sigortalk
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push production image
        run: |
          echo "ðŸ“¦ Building production image..."
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --cache-from=type=registry,ref=${IMAGE_NAME}:cache \
            --cache-to=type=registry,ref=${IMAGE_NAME}:cache,mode=max \
            -f Dockerfile \
            -t ${IMAGE_NAME}:main_${IMAGE_TAG} \
            -t ${IMAGE_NAME}:latest \
            --push .

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Save SSH Key
        run: |
          printf '%s\n' "${{ secrets.SSH_KEY }}" > /tmp/ssh_key.pem
          chmod 600 /tmp/ssh_key.pem

      - name: Deploy to EC2 (main)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
          
            IMAGE_NAME="zerojae175/sigortalk"
            TAG="latest"
          
            echo "ðŸ“¥ Pulling Docker image: $IMAGE_NAME:$TAG"
            docker pull $IMAGE_NAME:$TAG
          
            echo "ðŸ›‘ Stopping and removing old container: sigortalk"
            docker stop sigortalk || true
            docker rm sigortalk || true
          
            echo "ðŸš€ Running new container: sigortalk"
            docker run -d --restart unless-stopped \
              --name sigortalk \
              --network app-net \
              -e SPRING_PROFILES_ACTIVE=production \
              -e SERVER_PORT="8080" \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e DB_DRIVER="${{ secrets.DB_DRIVER }}" \
              -e DB_DIALECT="${{ secrets.DB_DIALECT }}" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_NAME="${{ secrets.DB_NAME }}" \
              -e DB_ROOT_PASSWORD="${{ secrets.DB_ROOT_PASSWORD }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e JWT_ACCESS_TOKEN_VALIDITY="${{ secrets.JWT_ACCESS_TOKEN_VALIDITY }}" \
              -e JWT_REFRESH_TOKEN_VALIDITY="${{ secrets.JWT_REFRESH_TOKEN_VALIDITY }}" \
              $IMAGE_NAME:$TAG
          
            echo "âœ… Deployment(main) completed!"
